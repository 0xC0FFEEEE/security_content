include:
  - local: "pipeline/.install-contentctl.yml"
  - local: "pipeline/.rsync.yml"
  - local: "pipeline/.checkout-source-branch.yml"
# Run reporting
reporting:
  stage: release
  needs:
  - create_git_release
  variables:
    BUCKET: "security-content"
  before_script:
    - !reference [.install-contentctl, before_script]
    - !reference [.rsync, before_script]
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
  script:
    - contentctl report
    - aws s3 cp reporting s3://$BUCKET/reporting --recursive --exclude "*" --include "*.svg"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]$/'
      when: on_success

# Update Attack Range ESCU App
attack_range_escu_app:
  stage: release
  needs:
  - create_git_release
  artifacts:
    when: always
    paths:
      - artifacts/*
    expire_in: 14 days
  variables:
    BUCKET: "attack-range-appbinaries"
  before_script:
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
  script:
    - aws s3 cp artifacts/DA-ESS-ContentUpdate-latest.tar.gz  s3://$BUCKET/
    - aws s3api put-object-acl --bucket $BUCKET --key DA-ESS-ContentUpdate-latest.tar.gz --acl public-read
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]$/'
      when: on_success

# Push SSE security content Json files to Artifactory
push_sse_json_to_artifactory:
  stage: release
  needs:
    - create_git_release
  before_script:
    - !reference [.install-contentctl, before_script]
    - !reference [.rsync, before_script]
    # Update contentctl.yml version key for ESCU using CI_COMMIT_TAG and then build the app using sed
    - 'NEW_VERSION=$(echo $CI_COMMIT_TAG | sed "s/^v//")'
    - 'echo "Updating contentctl.yml version: $NEW_VERSION"'
    - 'sed -i "/app:/,/apps:/s/version: [0-9]*\.[0-9]*\.[0-9]*/version: $NEW_VERSION/" contentctl.yml'
    - contentctl build --enrichments
    - tar -czvf sse.tar.gz dist/api/*
  script:
    - creds-helper init
    - eval $(creds-helper artifactory --eval $ARTIFACTORY_GENERIC_WRITE_ROLE)
    - curl -u $ARTIFACTORY_AUTHORIZATION -X PUT $ARTIFACTORY_BASE_URL/generic/threat-research-security-content/$CI_COMMIT_TAG/$CI_PIPELINE_ID/sse.tar.gz -T sse.tar.gz
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]$/'
  id_tokens:
    CI_JOB_JWT:
      aud: $CICD_VAULT_ADDR

trigger_downstream_sse_json_release:
  stage: release
  needs:
    - push_sse_json_to_artifactory
  inherit:
    variables: false
  variables:
    UPSTREAM_ESCU_VERSION: $CI_COMMIT_TAG
    IS_DOWNSTREAM_SSE_JSON_RELEASE: "True"
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
  trigger:
    project: securitycontent/security-content-automation
    branch: main
    strategy: depend
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]$/'
