name: GetWmiObject User Account with PowerShell Script Block
id: 640b0eda-0429-11ec-accd-acde48001122
version: 1
date: '2021-08-23'
author: Mauricio Velazco, Splunk
type: batch
datamodel:
- Endpoint
description: The following analytic utilizes PowerShell Script Block Logging (EventCode=4104)
  to identify the execution of the `Get-WmiObject` commandlet used with specific parameters. The `Win32_UserAccount` parameter is used 
  to return a list of all local users. 
  Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.
search: 'powershell` EventCode=4104 Message IN (*Get-WmiObject*, *Win32_UserAccount*)
  | stats count min(_time) as firstTime max(_time) as lastTime by EventCode Message
  ComputerName User | `security_content_ctime(firstTime)` | `getwmiobject_user_account_with_powershell_script_block_filter`'
how_to_implement: To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.
known_false_positives: Administrators or power users may use this PowerShell commandlet for troubleshooting.
references:
- https://attack.mitre.org/techniques/T1087/001/
tags:
  analytic_story:
  - Active Directory Discovery
  dataset:
  - UPDATE_DATASET_URL
  kill_chain_phases:
  - Reconnaissance
  mitre_attack_id:
  - T1087.001
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  security_domain: endpoint
  impact: 30
  confidence: 50
  risk_score: 15
  context:
  - Source:Endpoint
  - Stage:Discovery
  - Stage:Recon 
  message: Local user discovery enumeration using PowerShell on $dest$ by $user$
  observable:
  - name: dest
    type: Endpoint
    role:
    - Victim