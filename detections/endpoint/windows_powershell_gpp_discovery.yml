name: Windows PowerShell GPP Discovery
id: 0130a0df-83a1-4647-9011-841e950ff302
version: 1
date: '2023-03-16'
author: Mauricio Velazco, Splunk
type: TTP
datamodel: []
description: UPDATE_DESCRIPTION
search: ' EventCode=4104  (ScriptBlockText=Get-GPPPassword OR ScriptBlockText=Get-CachedGPPPassword)
  | stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer
  UserID EventCode ScriptBlockText | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `windows_powershell_gpp_discovery_filter`'
how_to_implement: To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.
known_false_positives: Unknown
references:
- https://pentestlab.blog/2017/03/20/group-policy-preferences/
- https://adsecurity.org/?p=2288 
- https://www.hackingarticles.in/credential-dumping-group-policy-preferences-gpp/
tags:
  analytic_story:
  - Active Directory Privilege Escalation
  asset_type: Endpoint
  cis20:
  - CIS 3
  - CIS 5
  - CIS 16
  confidence: 80
  context:
  - Source:Endpoint
  - Stage:Privilege Escalation
  dataset:
  - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1552.006/powershell_gpp_discovery/win-powershell.log
  impact: 70
  kill_chain_phases:
  - Exploitation
  message: Commandlets leveraged to discover GPP credentials were executed on $Computer$
  mitre_attack_id:
  - T1552
  - T1552.006
  nist:
  - DE.CM
  observable:
  - name: Computer
    type: Hostname
    role:
    - Victim
  - name: UserID
    type: User
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - EventCode
  - ScriptBlockText
  - Opcode
  - Computer
  - UserID
  risk_score: 56
  security_domain: endpoint
