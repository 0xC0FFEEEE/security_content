name: Linux Auditd Find Credentials From Password Stores
id: 4de73044-9a1d-4a51-a1c2-85267d8dcab3
version: 1
date: '2024-08-27'
author: Teoderick Contreras, Splunk
status: production
type: TTP
description: The following analytic detects suspicious attempts to find credentials
  stored in password stores, indicating a potential attacker's effort to access sensitive
  login information. Password stores are critical repositories that contain valuable
  credentials, and unauthorized access to them can lead to significant security breaches.
  By monitoring for unusual or unauthorized activities related to password store access,
  this analytic helps identify potential credential theft attempts, allowing security
  teams to respond promptly and prevent unauthorized access to critical systems and
  data.
data_source:
- Linux Auditd Execve
search: '`linux_auditd` `linux_auditd_normalized_execve_process` | where  (LIKE (process_exec,
  "%find%") OR LIKE (process_exec, "%grep%")) AND (LIKE (process_exec, "%password%")
  OR LIKE (process_exec, "%pass %") OR LIKE (process_exec, "%credential%")OR LIKE
  (process_exec, "%creds%")) | stats count min(_time) as firstTime max(_time) as lastTime
  by argc process_exec | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`|
  `linux_auditd_find_credentials_from_password_stores_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process complete command-line executions.
  These logs must be processed using the appropriate Splunk Technology Add-ons that
  are specific to the EDR product. Use the Splunk Common Information Model (CIM) to
  normalize the field names and speed up the data modeling process.
known_false_positives: Administrator or network operator can use this application
  for automation purposes. Please update the filter macros to remove false positives.
references:
- https://www.splunk.com/en_us/blog/security/deep-dive-on-persistence-privilege-escalation-technique-and-detection-in-linux-platform.html
- https://github.com/peass-ng/PEASS-ng/tree/master/linPEAS
tags:
  analytic_story:
  - Linux Living Off The Land
  - Linux Privilege Escalation
  - Linux Persistence Techniques
  - Compromised Linux Host
  asset_type: Endpoint
  confidence: 80
  impact: 80
  message: $process_exec$ event occurred on host.
  mitre_attack_id:
  - T1555.005
  - T1555
  observable:
  - name: process_exec
    type: Other
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - argc
  - process_exec
  risk_score: 25
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1555.005/linux_auditd_find_credentials/linux_auditd_find_credentials.log
    source: /var/log/audit/audit.log
    sourcetype: linux:audit
