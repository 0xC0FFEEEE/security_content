name: Linux Auditd Find Private Keys
id: 80bb9988-190b-4ee0-a3c3-509545a8f678
version: 1
date: '2024-08-27'
author: Teoderick Contreras, Splunk
status: production
type: TTP
description: "The following analytic detects suspicious attempts to find private keys,\
  \ which may indicate an attacker\u2019s effort to access sensitive cryptographic\
  \ information. Private keys are crucial for securing encrypted communications and\
  \ data, and unauthorized access to them can lead to severe security breaches, including\
  \ data decryption and identity theft. By monitoring for unusual or unauthorized\
  \ searches for private keys, this analytic helps identify potential threats to cryptographic\
  \ security, enabling security teams to take swift action to protect the integrity\
  \ and confidentiality of encrypted information."
data_source:
- Linux Auditd Execve
search: ' `linux_auditd` `linux_auditd_normalized_execve_process` | where  (LIKE (process_exec,
  "%find%") OR LIKE (process_exec, "%grep%")) AND (LIKE (process_exec, "%.pem%") OR
  LIKE (process_exec, "%.cer%") OR LIKE (process_exec, "%.crt%") OR LIKE (process_exec,
  "%.pgp%") OR LIKE (process_exec, "%.key%") OR LIKE (process_exec, "%.gpg%")OR LIKE
  (process_exec, "%.ppk%") OR LIKE (process_exec, "%.p12%")OR LIKE (process_exec,
  "%.pfx%")OR LIKE (process_exec, "%.p7b%")) | stats count min(_time) as firstTime
  max(_time) as lastTime by argc process_exec | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)`| `linux_auditd_find_private_keys_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process complete command-line executions.
  These logs must be processed using the appropriate Splunk Technology Add-ons that
  are specific to the EDR product. Use the Splunk Common Information Model (CIM) to
  normalize the field names and speed up the data modeling process.
known_false_positives: Administrator or network operator can use this application
  for automation purposes. Please update the filter macros to remove false positives.
references:
- https://www.splunk.com/en_us/blog/security/deep-dive-on-persistence-privilege-escalation-technique-and-detection-in-linux-platform.html
- https://github.com/peass-ng/PEASS-ng/tree/master/linPEAS
tags:
  analytic_story:
  - Linux Living Off The Land
  - Linux Privilege Escalation
  - Linux Persistence Techniques
  - Compromised Linux Host
  asset_type: Endpoint
  confidence: 80
  impact: 80
  message: $process_exec$ event occurred on host.
  mitre_attack_id:
  - T1552.004
  - T1552
  observable:
  - name: process_exec
    type: Other
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - argc
  - process_exec
  risk_score: 64
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1552.004/linux_auditd_find_gpg/linux_auditd_find_gpg.log
    source: /var/log/audit/audit.log
    sourcetype: linux:audit
