name: Linux Auditd Base64 Decode Files
id: 5890ba10-4e48-4dc0-8a40-3e1ebe75e737
version: 1
date: '2024-08-19'
author: Teoderick Contreras, Splunk
status: production
type: Anomaly
description: The following analytic detects suspicious Base64 decode operations that may indicate malicious activity, 
  such as data exfiltration or execution of encoded commands. Base64 is commonly used to encode data for safe transmission, 
  but attackers may abuse it to conceal malicious payloads. This detection focuses on identifying unusual or unexpected 
  Base64 decoding processes, particularly when associated with critical files or directories. By monitoring these activities, 
  the analytic helps uncover potential threats, enabling security teams to respond promptly and mitigate risks associated 
  with encoded malware or unauthorized data access.
data_source:
- Linux Auditd Execve
search: '`linux_auditd` `linux_auditd_normalized_execve_process` | where LIKE(process_exec,
  "%base64%") AND (LIKE(process_exec, "%-d %") OR LIKE(process_exec, "% --d%")) |
  stats count min(_time) as firstTime max(_time) as lastTime by argc process_exec
  | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| `linux_auditd_base64_decode_files_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process complete command-line executions.
  These logs must be processed using the appropriate Splunk Technology Add-ons that
  are specific to the EDR product. Use the Splunk Common Information Model (CIM) to
  normalize the field names and speed up the data modeling process.
known_false_positives: Administrator or network operator can use this application
  for automation purposes. Please update the filter macros to remove false positives.
references:
- https://www.splunk.com/en_us/blog/security/deep-dive-on-persistence-privilege-escalation-technique-and-detection-in-linux-platform.html
- https://gtfobins.github.io/gtfobins/dd/
tags:
  analytic_story:
  - Linux Privilege Escalation
  - Linux Persistence Techniques
  - Linux Living Off The Land
  asset_type: Endpoint
  confidence: 50
  impact: 50
  message: $process_exec$ event occurred on host.
  mitre_attack_id:
  - T1140
  observable:
  - name: process_exec
    type: Other
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - argc
  - process_exec
  risk_score: 25
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1140/linux_auditd_base64/linux_auditd_base64.log
    source: /var/log/audit/audit.log
    sourcetype: linux:audit
