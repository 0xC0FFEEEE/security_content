name: Schtasks Run Task On Demand 
id: bb37061e-af1f-11eb-a159-acde48001122
version: 1
date: '2021-05-07'
author: Teoderick Contreras, Splunk
type: batch
datamodel:
- Endpoint
description: This search is to detect a on demand run of schedule task through shell or commandline.
  This technique was seen in some adversaries or attacker that force to run their created schedule task as their persistence mechanism or 
  for lateral movement as part of their malicious attack to the compromised machine.
search: '| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id 
  count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes
  where Processes.process_name = "schtasks.exe" Processes.process = "*/run*" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
  | `drop_dm_object_name(Processes)` 
  | `security_content_ctime(firstTime)` 
  | `security_content_ctime(lastTime)`
  | `schtasks_run_task_on_demand__filter`'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA. Tune and filter known instances where renamed schtasks.exe may be used.
known_false_positives: network operator or user may debug schedule task entry.
references:
- https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/
tags:
  analytic_story:
  - xmrig
  kill_chain_phases:
  - Exploitation
  mitre_attack_id:
  - T1053
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.process
  - Processes.process_id
  - Processes.process_name 
  - Processes.parent_process_name
  - Processes.dest
  - Processes.user 
  security_domain: endpoint