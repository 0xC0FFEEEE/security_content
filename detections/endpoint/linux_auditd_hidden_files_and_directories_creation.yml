name: Linux Auditd Hidden Files And Directories Creation
id: 555cc358-bf16-4e05-9b3a-0f89c73b7261
version: 1
date: '2024-08-19'
author: Teoderick Contreras, Splunk
status: production
type: TTP
description: The following analytic detects suspicious creation of hidden files and directories, 
  which may indicate an attackerâ€™s attempt to conceal malicious activities or unauthorized data. 
  Hidden files and directories are often used to evade detection by security tools and administrators, 
  providing a stealthy means for storing malware, logs, or sensitive information. By monitoring for 
  unusual or unauthorized creation of hidden files and directories, this analytic helps identify potential 
  attempts to hide malicious operations, enabling security teams to uncover and address hidden threats effectively.
data_source:
- Linux Auditd Execve
search: ' `linux_auditd` `linux_auditd_normalized_execve_process` | where (LIKE (process_exec,"%touch
  %") OR LIKE (process_exec,"%mkdir %")OR LIKE (process_exec,"%vim %") OR LIKE (process_exec,"%vi
  %") OR LIKE (process_exec,"%nano %")) AND (LIKE (process_exec,"% ./.%")  OR LIKE
  (process_exec," .%")OR LIKE (process_exec," /.%")) | stats count min(_time) as firstTime
  max(_time) as lastTime by argc process_exec | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)`| `linux_auditd_hidden_files_and_directories_creation_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process complete command-line executions.
  These logs must be processed using the appropriate Splunk Technology Add-ons that
  are specific to the EDR product. Use the Splunk Common Information Model (CIM) to
  normalize the field names and speed up the data modeling process.
known_false_positives: Administrator or network operator can use this application
  for automation purposes. Please update the filter macros to remove false positives.
references:
- https://www.splunk.com/en_us/blog/security/deep-dive-on-persistence-privilege-escalation-technique-and-detection-in-linux-platform.html
- https://github.com/peass-ng/PEASS-ng/tree/master/linPEAS
tags:
  analytic_story:
  - Linux Privilege Escalation
  - Linux Persistence Techniques
  - Linux Living Off The Land
  asset_type: Endpoint
  confidence: 80
  impact: 80
  message: $process_exec$ event occurred on host.
  mitre_attack_id:
  - T1083
  observable:
  - name: process_exec
    type: Other
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - argc
  - process_exec
  risk_score: 64
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1083/linux_auditd_hidden_file/linux_auditd_hidden_file.log
    source: /var/log/audit/audit.log
    sourcetype: linux:audit
