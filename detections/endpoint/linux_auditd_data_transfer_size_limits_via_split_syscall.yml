name: Linux Auditd Data Transfer Size Limits Via Split Syscall
id: c03d4a49-cf9d-435b-86e9-c6f8c9b6c42e
version: 1
date: '2024-08-19'
author: Teoderick Contreras, Splunk
status: production
type: Anomaly
description: The following analytic detects suspicious data transfer activities 
  that involve the use of the `split` syscall, potentially indicating an attempt to 
  evade detection by breaking large files into smaller parts. Attackers may use this 
  technique to bypass size-based security controls, facilitating the covert exfiltration 
  of sensitive data. By monitoring for unusual or unauthorized use of the `split` syscall, 
  this analytic helps identify potential data exfiltration attempts, allowing security teams 
  to intervene and prevent the unauthorized transfer of critical information from the network.
data_source:
- Linux Auditd Syscall
search: '`linux_auditd` type=SYSCALL comm=split OR exe= "*/split" | stats count min(_time)
  as firstTime max(_time) as lastTime by comm exe  SYSCALL UID ppid pid success |
  `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`| `linux_auditd_data_transfer_size_limits_via_split_syscall_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process complete command-line executions.
  These logs must be processed using the appropriate Splunk Technology Add-ons that
  are specific to the EDR product. Use the Splunk Common Information Model (CIM) to
  normalize the field names and speed up the data modeling process.
known_false_positives: Administrator or network operator can use this application
  for automation purposes. Please update the filter macros to remove false positives.
references:
- https://www.splunk.com/en_us/blog/security/deep-dive-on-persistence-privilege-escalation-technique-and-detection-in-linux-platform.html
tags:
  analytic_story:
  - Linux Privilege Escalation
  - Linux Persistence Techniques
  - Linux Living Off The Land
  asset_type: Endpoint
  confidence: 50
  impact: 50
  message: $comm$ was executed on host.
  mitre_attack_id:
  - T1030
  observable:
  - name: comm
    type: Other
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - comm
  - exe
  - SYSCALL
  - UID
  - ppid
  - pid
  risk_score: 25
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1030/linux_auditd_split_syscall/linux_auditd_split_syscall.log
    source: /var/log/audit/audit.log
    sourcetype: linux:audit
