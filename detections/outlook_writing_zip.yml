asset_type: Endpoint
baselines: []
confidence: high
creation_date: '2019-04-29'
data_metadata:
  data_models:
    - Endpoint
  data_source:
    - Endpoint Intel
  providing_technologies:
    - Carbon Black Response
    - CrowdStrike Falcon
    - Sysmon
    - Tanium
    - Ziften
description: This search looks for execution of process `outlook.exe` where the process
  is writing a `.zip` file to the disk.
detect:
  splunk:
    correlation_rule:
      notable:
        nes_fields: dest, process_name, file_name
        rule_description: Outlook.exe is writing a zip file $file_name$ on $dest$
        rule_title: Outlook.exe is writing a zip file $file_name$ on $dest$
      risk:
        risk_object: dest
        risk_object_type:
          - system
        risk_score: 20
      schedule:
        cron_schedule: 0 * * * *
        earliest_time: -70m@m
        latest_time: -10m@m
      search: '| tstats `security_content_summariesonly`  min(_time) as firstTime max(_time) as lastTime
        FROM datamodel=Endpoint.Processes where Processes.process_name=outlook.exe
        OR Processes.process_name=explorer.exe by _time span=5m Processes.parent_process_id
        Processes.process_id Processes.dest Processes.process_name Processes.parent_process_name
        Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
        | rename process_id as malicious_id| rename parent_process_id as outlook_id|
        join malicious_id type=inner[| tstats `security_content_summariesonly` count values(Filesystem.file_path)
        as file_path values(Filesystem.file_name) as file_name  FROM datamodel=Endpoint.Filesystem
        where (Filesystem.file_path=*zip*   OR Filesystem.file_name=*.lnk ) AND (Filesystem.file_path=C:\\Users*
        OR Filesystem.file_path=*Local\\Temp*) by  _time span=5m Filesystem.process_id
        Filesystem.file_hash Filesystem.dest  | `drop_dm_object_name(Filesystem)`
        | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename process_id as malicious_id|
        fields malicious_id outlook_id dest file_path file_name file_hash count file_id]
        | table firstTime lastTime user dest malicious_id outlook_id process_name parent_process_name
        file_name  file_path | where file_name != ""'
      suppress:
        suppress_fields: dest,file_name
        suppress_period: 86400s
eli5: In this search, we are essentially trying to detect if outlook.exe is writing
  a `.zip` file to the disk. The way this search would run is, it will execute the
  the subsearch first which looks for all .zip files being written to the disk and
  outputs a crucial field "process_id", that we use the main search to check if that
  process\_id belongs to a process_name of outlook.exe. The search uses a join command
  to essentially give you an end result of the first and last time that zip file was
  written by outlook.exe, the dest and user logged on the system, the hash value and
  the complete path to the zip file on disk
entities:
  - dest
how_to_implement: You must be ingesting data that records filesystem and process activity
  from your hosts to populate the Endpoint data model. This is typically populated
  via endpoint detection-and-response products, such as Carbon Black, or endpoint
  data sources, such as Sysmon.
id: a51bfe1a-94f0-4822-b1e4-16ae10145893
investigations:
  - id: fecf2918-670d-4f1c-872b-3d7317a41bf9
    name: Get Parent Process Info
    type: splunk
known_false_positives: It is not uncommon for outlook to write legitimate zip files
  to the disk.
maintainers:
  - company: Splunk
    email: bpatel@splunk.com
    name: Bhavin Patel
mappings:
  cis20:
    - CIS 7
    - CIS 8
  kill_chain_phases:
    - Installation
    - Actions on Objectives
  mitre_attack:
    - Initial Access
    - Spearphishing Attachment
  nist:
    - ID.AM
    - PR.DS
modification_date: '2019-04-29'
name: Detect Oulook.exe writing a .zip file
original_authors:
  - company: Splunk
    email: bpatel@splunk.com
    name: Bhavin Patel
responses: []
security_domain: network
spec_version: 2
type: splunk
version: '1.0'
