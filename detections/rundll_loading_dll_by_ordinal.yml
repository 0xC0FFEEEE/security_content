asset_type: Endpoint
confidence: medium
creation_date: '2016-08-09'
data_metadata:
  data_models:
    - Endpoint
  data_source:
    - Endpoint Intel
  providing_technologies:
    - Carbon Black Response
    - CrowdStrike Falcon
    - Sysmon
    - Tanium
    - Ziften
description: This search looks for DLLs under %AppData% being loaded by rundll32.exe
  that are calling the exported function at ordinal 2. Calling exported functions
  by ordinal is not as common as calling by exported name. There was a bug fixed in
  IDAPro on 2016-08-08 that would not display functions without names.  Calling functions
  by ordinal would overcome the lack of name and make it harder for analyst to reverse
  engineer.
detect:
  splunk:
    correlation_rule:
      notable:
        nes_fields: dest, user, process
        rule_description: This search looks for DLLs under %AppData% being loaded
          by rundll32.exe that are calling the exported function at ordinal 2.  Calling
          exported functions by ordinal is not as common as calling by exported name.  There
          was a bug fixed in IDAPro on 2016-08-08 that would not display functions
          with no names.  Calling functions by ordinal would overcome the lack of
          name and make it harder for analyst to reverse engineer.
        rule_title: Endpoint - Suspicious RunDLL usage
      risk:
        risk_object: dest
        risk_object_type:
          - system
        risk_score: 50
      schedule:
        cron_schedule: 0 * * * *
        earliest_time: -70m@m
        latest_time: -10m@m
      search: '| tstats `security_content_summariesonly` values(Processes.process) as process min(_time)
        as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where
        Processes.process_name = rundll32.exe Processes.process="*AppData*" Processes.process="*,#2"
        by Processes.process_name Processes.parent_process_name Processes.dest Processes.user
        | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`'
      suppress:
        suppress_fields: dest,user
        suppress_period: 28800s
eli5: This search looks for rundll32.exe being run, loading a DLL out of a directory
  or subdirectory of AppData, and specifying the function at ordinal 2 be run.
entities:
  - dest
how_to_implement: You must be ingesting data that records process activity from your
  hosts to populate the Endpoint data model in the Processes node. You must also be
  ingesting logs with both the process name and command line from your endpoints.
  The command-line arguments are mapped to the "process" field in the Endpoint data
  model.
id: 6c135f8d-5e60-454e-80b7-c56eed739833
investigations:
  - id: bc91a8cf-35e7-4bb2-8140-e756cc06fd76
    name: Get Authentication Logs For Endpoint
    type: splunk
  - id: fdcfb369-1725-4c24-824a-22972d7f0d55
    name: Get Risk Modifiers For User
    type: splunk
  - id: bc91a8cf-35e7-4bb2-8140-e756cc06fd71
    name: Get Process Info
    type: splunk
  - id: 3d6c3213-5fff-4a1e-b57d-b24c262171e7
    name: Get Notable History
    type: splunk
  - id: fdcfb369-1725-4c24-824a-22972d7f0d65
    name: Get Risk Modifiers For Endpoint
    type: splunk
  - id: bc91a8cf-35e7-4bb2-8140-e756cc06fd74
    name: Get User Information from Identity Table
    type: splunk
known_false_positives: While not common, loading a DLL under %AppData% and calling
  a function by ordinal is possible by a legitimate process
maintainers:
  - company: Splunk
    email: davidd@splunk.com
    name: David Dorsey
mappings:
  cis20:
    - CIS 8
  kill_chain_phases:
    - Installation
  mitre_attack:
    - Execution
    - Rundll32
  nist:
    - PR.PT
    - DE.CM
modification_date: '2019-02-27'
name: RunDLL Loading DLL By Ordinal
original_authors:
  - company: Splunk
    email: davidd@splunk.com
    name: David Dorsey
references: []
security_domain: endpoint
spec_version: 2
type: splunk
version: '2.0'
