{
  "asset_type": "AWS Instance",
  "channel": "ESCU",
  "confidence": "medium",
  "correlation_rule": {
    "notable": {
      "nes_fields": "arn",
      "rule_description": "A user has logged into the AWS console from a new city.",
      "rule_title": "AWS Console Login by User from New City"
    },
    "risk": {
      "risk_object": "arn",
      "risk_object_type": [
        "user"
      ],
      "risk_score": 30
    },
    "suppress": {
      "suppress_fields": "arn",
      "suppress_period": "86400s"
    }
  },
  "creation_date": "2018-04-24",
  "data_metadata": {
    "data_source": [
      "AWS CloudTrail logs"
    ],
    "data_sourcetypes": [
      "aws:cloudtrail"
    ],
    "providing_technologies": [
      "AWS"
    ]
  },
  "eli5": "In this search, we query CloudTrail logs to look for events that indicate that a user has attempted to log in to the AWS console from a new city and group the events using ARN value. Using the <code>previously_seen_users_console_logins.csv</code> lookup file created using the support search, we compare the ARN to all the previously seen ARN and city combinations logging into the AWS console. The <code>eval</code> and <code>if</code> functions determine whether the earliest time we see this user ARN was seen within the last hour. The alert will be fired only when a user is seen for first time in the last hour.",
  "how_to_implement": "You must install the AWS App for Splunk (version 5.1.0 or later) and Splunk Add-on for AWS (version 4.4.0 or later), then configure your CloudTrail inputs. Run the \"Previously seen users in CloudTrail\" support search only once to create a baseline of previously seen IAM users within the last 30 days",
  "known_false_positives": "When a legitimate new user logins for the first time, this activity will be detected. Check how old the account is and verify that the user activity is legitimate.",
  "maintainers": [
    {
      "company": "Splunk",
      "email": "bpatel@splunk.com",
      "name": "Bhavin Patel"
    },
    {
      "company": "Splunk",
      "email": "jbrewer@splunk.com",
      "name": "Jason Brewer"
    }
  ],
  "mappings": {
    "cis20": [
      "CIS 16"
    ],
    "kill_chain_phases": [
      "Actions on Objectives"
    ],
    "mitre_attack": [
      "Credential Access"
    ],
    "nist": [
      "DE.DP",
      "DE.AE"
    ]
  },
  "modification_date": "2018-04-24",
  "original_authors": [
    {
      "company": "Splunk",
      "email": "bpatel@splunk.com",
      "name": "Bhavin Patel"
    },
    {
      "company": "Splunk",
      "email": "jbrewer@splunk.com",
      "name": "Jason Brewer"
    }
  ],
  "scheduling": {
    "cron_schedule": "5 * * * *",
    "earliest_time": "-70m@m",
    "latest_time": "-10m@m"
  },
  "search": "| inputlookup previously_seen_users_console_logins.csv | stats min(earliest) as earliest max(latest) as latest by user City | join user type=outer [| inputlookup previously_seen_users_console_logins.csv | stats min(earliest) AS earliestseen by user | fields earliestseen user] | eval userStatus=if(earliest >= relative_time(now(), \"@d\"), \"New City\",\"Previously Seen City\") | eval UserData=if(earliestseen >= relative_time(now(), \"@d\") OR isnull(earliestseen), \"New User\",\"Old User\") | where userStatus=\"New City\" AND UserData=\"Old User\" | convert ctime(earliest) ctime(latest) ctime(earliestseen) | table user City userStatus earliest latest earliestseen",
  "search_description": "This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour",
  "search_id": "121b0b11-f8ac-4ed6-a132-3800ca4fc07a",
  "search_name": "Detect AWS Console Login by User from New City",
  "search_type": "detection",
  "security_domain": "network",
  "spec_version": 1,
  "version": "1.0"
}
