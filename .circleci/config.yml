# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

dependencies:
  cache_directories:
    - "~/.apt-cache"
  pre:
    - sudo rm -rf /var/cache/apt/archives && sudo ln -s ~/.apt-cache /var/cache/apt/archives && mkdir -p ~/.apt-cache/partial

apt-run: &apt-install
  name: install system packages
  command: |
    sudo apt update -qq
    sudo apt install -y enchant python-dev -qq

version: 2.1

executors:
  content-executor:
    docker:
      - image: circleci/python:latest
    working_directory: ~/repo

jobs:
  validate-content:
    executor: content-executor
    steps:
      - run:
          name: checkout repo
          command: |
            if [ "${CIRCLE_BRANCH}" == "" ]; then
                git clone https://${GITHUB_TOKEN}@github.com/splunk/security-content.git
            else
                git clone --branch ${CIRCLE_BRANCH} https://${GITHUB_TOKEN}@github.com/splunk/security-content.git
            fi
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "security-content/requirements.txt" }}
      - run: *apt-install
      - run:
          name: install python dependencies
          command: |
            cd security-content
            rm -rf venv
            virtualenv --python=/usr/bin/python2.7 --clear venv
            source venv/bin/activate
            pip install -q -r requirements.txt
      - run:
          name: run validate
          command: |
            cd security-content
            source venv/bin/activate

            python bin/validate.py --path . --verbose
      - run:
          name: run generate
          command: |
            cd security-content
            source venv/bin/activate
            python bin/generate.py --path . --output package --storiesv1 --use_case_lib -v
      - persist_to_workspace:
          root: security-content/package/default
          paths:
              - use_case_library.conf
              - analytic_stories.conf
              - savedsearches.conf
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "security-content/requirements.txt" }}
          paths:
            - "venv"
  build-sources:
    executor: content-executor
    steps:
      - run:
          name: checkout repo
          command: |
            if [ "${CIRCLE_BRANCH}" == "" ]; then
                git clone https://${GITHUB_TOKEN}@github.com/splunk/security-content.git
            else
                git clone --branch ${CIRCLE_BRANCH} https://${GITHUB_TOKEN}@github.com/splunk/security-content.git
            fi
      - attach_workspace:
        # Must be absolute path or relative path from working_directory
          at: ~/repo/updated
      - run:
          name: store updated analyticstories.conf
          command: |
            # update generated files
            cd security-content
            cp -v ~/repo/updated/* package/default/

            # update build number
            sed -i "s/build = .*$/build = $CIRCLE_BUILD_NUM/g" package/default/app.conf

            # configure git to prep for commit
            git config credential.helper 'cache --timeout=120'
            git config user.email "research@splunk.com"
            git config user.name "research bot"
            git config --global push.default simple
            git add package/default/*
            git commit --allow-empty -m "updating package files"
            # Push quietly to prevent showing the token in log
            git push https://${GITHUB_TOKEN}@github.com/splunk/security-content.git ${CIRCLE_BRANCH}
            tar -czvf content-pack.tar.gz package/*
      - persist_to_workspace:
          root: security-content/
          paths:
              - content-pack.tar.gz
  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ~/repo/updated
      - run:
          name: publish release on github
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ~/repo/updated/content-pack.tar.gz
workflows:
  version: 2.1
  validate-and-build:
    jobs:
      - validate-content:
          filters:
            tags:
              only: /.*/
      - build-sources:
          requires:
            - validate-content
          filters:
            tags:
              only: /.*/
      - publish-github-release:
          requires:
            - validate-content
            - build-sources
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/



