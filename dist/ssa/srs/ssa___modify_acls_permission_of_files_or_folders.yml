name: Modify ACLs Permission Of Files Or Folders
id: 9ae9a48a-cdbe-11eb-875a-acde48001122
version: 3
description: This analytic identifies suspicious modification of ACL permission to
  a files or folder to make it available to everyone or to a specific user. This technique
  may be used by the adversary to evade ACLs or protected files access. This changes
  is commonly configured by the file or directory owner with appropriate permission.
  This behavior raises suspicion if this command is seen on an endpoint utilized by
  an account with no permission to do so.
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_file=ucast(map_get(process,"file"),
  "map<string, any>", null) | eval process_file_name=ucast(map_get(process_file,"name"),
  "string", null) | eval actor=ucast(map_get(input_event,"actor"), "map<string, any>",
  null) | eval actor_process=ucast(map_get(actor,"process"), "map<string, any>", null)
  | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string, any>",
  null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"), "string",
  null) | eval actor_process_cmd_line=ucast(map_get(actor_process,"cmd_line"), "string",
  null) | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null)
  | eval process_file_path=ucast(map_get(process_file,"path"), "string", null) | eval
  process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval process_user_name=ucast(map_get(process_user,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where (match_regex(process_cmd_line, /(?i)S-1-1-0:/)=true OR match_regex(process_cmd_line,
  /(?i)SYSTEM:/)=true OR match_regex(process_cmd_line, /(?i)everyone:/)=true) AND
  (process_file_name="icacls.exe" OR process_file_name="xcacls.exe" OR process_file_name="cacls.exe")
  
  | eval body=create_map(
    "activity_id", 1,
    "analytic_stories", ["XMRig"],
    "cis_csc", [create_map("control", "CIS 10", "version", 7)],
    "category_uid", 2,
    "class_name", "Detection Report",
    "class_uid", 102001,
    "confidence", 70,
    "confidence_id", 3,
    "devices", [
        create_map(
            "hostname", device_hostname, "type_id", 0, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ],
    "duration", 0,
    "time", timestamp,
    "evidence", create_map("process.user.name", process_user_name, "device.hostname", device_hostname, "process.file.name", process_file_name, "process.cmd_line", process_cmd_line),
    "impact", 50,
    "impact_id", 3,
    "kill_chain", [create_map("phase", "Exploitation", "phase_id", 4)],
    "attacks", [create_map("tactics", [create_map("name", "Defense Evasion", "uid", "TA0005")], "technique", create_map("name", "File and Directory Permissions Modification", "uid", "T1222"), "version", "12.1")],  
    "message", concat("Modify ACLs Permission Of Files Or Folders has been triggered on ", device_hostname, " by ", process_user_name, "."),
    "metadata", create_map(
        "product", create_map(
            "name", "Behavioral Analytic Service",
            "vendor_name", "Splunk"
        ),
        "version", "1.0.0"
    ),
    "nist", ["DE.AE"],
    "observables", [create_map("name", "process.user.name", "type_id", 4, "value", process_user_name), create_map("name", "device.hostname", "type_id", 1, "value", device_hostname), create_map("name", "process.file.name", "type_id", 7, "value", process_file_name), create_map("name", "process.cmd_line", "type_id", 99, "value", process_cmd_line)],
    "risk_level", "Low",
    "risk_level_id", 1,
    "risk_score", 35,
    "severity_id", 3,
    "type_uid", 10200101,
    "users", [
        create_map(
            "name", process_user_name, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ]
  )
  | into write_ba_finding_events();'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA. Tune and filter known instances where renamed cacls.exe may be used.
known_false_positives: System administrators may use this windows utility. filter
  is needed.
references:
- https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/
tags:
  analytic_story:
  - XMRig
  cis20:
  - CIS 10
  kill_chain_phases:
  - Exploitation
  mitre_attack_id:
  - T1222
  nist:
  - DE.AE
  required_fields:
  - process.user.name
  - device.hostname
  - process.file.name
  - process.cmd_line
  risk_score: 35
  security_domain: endpoint
  risk_severity: low
  research_site_url: https://research.splunk.com/endpoint/9ae9a48a-cdbe-11eb-875a-acde48001122/
  mappings:
  - ocsf: process.user.name
    cim: user
  - ocsf: device.hostname
    cim: dest
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
test:
  name: Modify ACLs Permission Of Files Or Folders Unit Test
  tests:
  - name: Modify ACLs Permission Of Files Or Folders
    attack_data:
    - file_name: all_icalc.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1222.001/ssa_cacls/all_icalc.log
      source: WinEventLog:Security
