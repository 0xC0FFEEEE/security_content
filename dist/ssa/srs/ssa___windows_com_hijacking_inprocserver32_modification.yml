name: Windows COM Hijacking InprocServer32 Modification
id: 0ae05a0f-bc84-456b-822a-a5b9c081c7ca
version: 1
description: The following analytic identifies the use of reg.exe performing an add
  to the InProcServer32, which may be related to COM hijacking. Adversaries can use
  the COM system to insert malicious code that can be executed in place of legitimate
  software through hijacking the COM references and relationships as a means for persistence.
  Hijacking a COM object requires a change in the Registry to replace a reference
  to a legitimate system component which may cause that component to not work when
  executed. When that system component is executed through normal system operation
  the adversary's code will be executed instead.
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_pid=ucast(map_get(process,"pid"),
  "string", null) | eval process_file=ucast(map_get(process,"file"), "map<string,
  any>", null) | eval process_file_name=ucast(map_get(process_file,"name"), "string",
  null) | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null)
  | eval process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval
  process_user_name=ucast(map_get(process_user,"name"), "string", null) | eval actor=ucast(map_get(input_event,"actor"),
  "map<string, any>", null) | eval actor_process=ucast(map_get(actor,"process"), "map<string,
  any>", null) | eval actor_process_pid=ucast(map_get(actor_process,"pid"), "string",
  null) | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string,
  any>", null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where match_regex(process_cmd_line, /(?i)inprocserver32/)=true AND process_file_name="reg.exe"
  
  | eval body=create_map(
    "activity_id", 1,
    "analytic_stories", ["Living Off The Land"],
    "cis_csc", [create_map("control", "CIS 10", "version", 7)],
    "category_uid", 2,
    "class_name", "Detection Report",
    "class_uid", 102001,
    "confidence", 80,
    "confidence_id", 3,
    "devices", [
        create_map(
            "hostname", device_hostname, "type_id", 0, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ],
    "duration", 0,
    "time", timestamp,
    "evidence", create_map("process.user.name", process_user_name, "device.hostname", device_hostname, "process.file.name", process_file_name, "process.cmd_line", process_cmd_line),
    "impact", 80,
    "impact_id", 5,
    "kill_chain", [create_map("phase", "Installation", "phase_id", 5), create_map("phase", "Exploitation", "phase_id", 4)],
    "attacks", [create_map("tactics", [create_map("name", "Persistence", "uid", "TA0003"), create_map("name", "Privilege Escalation", "uid", "TA0004")], "technique", create_map("name", "Component Object Model Hijacking", "uid", "T1546.015"), "version", "12.1"), create_map("tactics", [create_map("name", "Persistence", "uid", "TA0003"), create_map("name", "Privilege Escalation", "uid", "TA0004")], "technique", create_map("name", "Event Triggered Execution", "uid", "T1546"), "version", "12.1")],  
    "message", concat("Windows COM Hijacking InprocServer32 Modification has been triggered on ", device_hostname, " by ", process_user_name, "."),
    "metadata", create_map(
        "product", create_map(
            "name", "Behavioral Analytic Service",
            "vendor_name", "Splunk"
        ),
        "version", "1.0.0"
    ),
    "nist", ["DE.CM"],
    "observables", [create_map("name", "process.user.name", "type_id", 4, "value", process_user_name), create_map("name", "device.hostname", "type_id", 1, "value", device_hostname), create_map("name", "process.file.name", "type_id", 7, "value", process_file_name), create_map("name", "process.cmd_line", "type_id", 99, "value", process_cmd_line)],
    "risk_level", "High",
    "risk_level_id", 3,
    "risk_score", 64,
    "severity_id", 5,
    "type_uid", 10200101,
    "users", [
        create_map(
            "name", process_user_name, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ]
  )
  | into write_ba_finding_events();'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: False positives may be present and some filtering may be required.
references:
- https://attack.mitre.org/techniques/T1546/015/
- https://blog.cluster25.duskrise.com/2022/09/23/in-the-footsteps-of-the-fancy-bear-powerpoint-graphite/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1546.015/T1546.015.md
tags:
  analytic_story:
  - Living Off The Land
  cis20:
  - CIS 10
  kill_chain_phases:
  - Installation
  - Exploitation
  mitre_attack_id:
  - T1546.015
  - T1546
  nist:
  - DE.CM
  required_fields:
  - process.user.name
  - device.hostname
  - process.file.name
  - process.cmd_line
  risk_score: 64
  security_domain: endpoint
  risk_severity: medium
  research_site_url: https://research.splunk.com/endpoint/0ae05a0f-bc84-456b-822a-a5b9c081c7ca/
  event_schema: ocsf
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: process.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
test:
  name: Windows COM Hijacking InprocServer32 Modification Unit Test
  tests:
  - name: Windows COM Hijacking InprocServer32 Modification
    attack_data:
    - file_name: windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1546.015/atomic_red_team/windows-security.log
      source: XmlWinEventLog
