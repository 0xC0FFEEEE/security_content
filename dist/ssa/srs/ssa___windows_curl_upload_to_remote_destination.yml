name: Windows Curl Upload to Remote Destination
id: cc8d046a-543b-11ec-b864-acde48001122
version: 1
description: 'The following analytic identifies the use of Windows Curl.exe uploading
  a file to a remote destination. \

  `-T` or `--upload-file` is used when a file is to be uploaded to a remotge destination.
  \

  `-d` or `--data` POST is the HTTP method that was invented to send data to a receiving
  web application, and it is, for example, how most common HTML forms on the web work.
  \

  HTTP multipart formposts are done with `-F`, but this appears to not be compatible
  with the Windows version of Curl. Will update if identified adversary tradecraft.
  \

  Adversaries may use one of the three methods based on the remote destination and
  what they are attempting to upload (zip vs txt). During triage, review parallel
  processes for further behavior. In addition, identify if the upload was successful
  in network logs. If a file was uploaded, isolate the endpoint and review.'
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_file=ucast(map_get(process,"file"),
  "map<string, any>", null) | eval process_file_name=ucast(map_get(process_file,"name"),
  "string", null) | eval actor=ucast(map_get(input_event,"actor"), "map<string, any>",
  null) | eval actor_process=ucast(map_get(actor,"process"), "map<string, any>", null)
  | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string, any>",
  null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"), "string",
  null) | eval actor_process_cmd_line=ucast(map_get(actor_process,"cmd_line"), "string",
  null) | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null)
  | eval process_file_path=ucast(map_get(process_file,"path"), "string", null) | eval
  process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval process_user_name=ucast(map_get(process_user,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where (like(process_cmd_line, "%-F %") OR like(process_cmd_line, "%--data
  %") OR like(process_cmd_line, "%-d %") OR like(process_cmd_line, "%--upload-file
  %") OR like(process_cmd_line, "%-T %")) AND match_regex(process_file_name, /(?i)curl.exe/)=true
  
  | eval body=create_map(
    "activity_id", 1,
    "analytic_stories", ["Ingress Tool Transfer", "Insider Threat"],
    "cis_csc", [create_map("control", "CIS 10", "version", 7)],
    "category_uid", 2,
    "class_name", "Detection Report",
    "class_uid", 102001,
    "confidence", 100,
    "confidence_id", 3,
    "devices", [
        create_map(
            "hostname", device_hostname, "type_id", 0
        )
    ],
    "duration", 0,
    "time", timestamp,
    "evidence", create_map("process_user_name", process_user_name, "device_hostname", device_hostname, "process_file_name", process_file_name, "process_cmd_line", process_cmd_line),
    "impact", 80,
    "impact_id", 5,
    "kill_chain", [create_map("phase", "Command And Control", "phase_id", 6)],
    "attacks", [create_map("tactics", [create_map("name", "Command And Control", "uid", "")], "technique", create_map("name", "Ingress Tool Transfer", "uid", "T1105"), "version", "12.1")],  
    "message", concat("Windows Curl Upload to Remote Destination has been triggered on ", device_hostname, " by ", process_user_name, "."),
    "metadata", create_map(
        "product", create_map(
            "name", "Behavioral Analytic Service",
            "vendor_name", "Splunk"
        ),
        "version", "1.0.0"
    ),
    "nist", ["DE.CM"],
    "observables", [create_map("name", "process_user_name", "type_id", 4, "value", process_user_name), create_map("name", "device_hostname", "type_id", 1, "value", device_hostname), create_map("name", "process_file_name", "type_id", 7, "value", process_file_name), create_map("name", "process_cmd_line", "type_id", 99, "value", process_cmd_line)],
    "risk_level", "Critical",
    "risk_level_id", 4,
    "risk_score", 80,
    "severity_id", 5,
    "type_uid", 10200101,
    "users", [
        create_map(
            "name", process_user_name
        )
    ]
  )
  | into write_ba_finding_events();'
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint_Processess` datamodel.
known_false_positives: False positives may be limited to source control applications
  and may be required to be filtered out.
references:
- https://everything.curl.dev/usingcurl/uploads
- https://techcommunity.microsoft.com/t5/containers/tar-and-curl-come-to-windows/ba-p/382409
- https://twitter.com/d1r4c/status/1279042657508081664?s=20
tags:
  analytic_story:
  - Ingress Tool Transfer
  - Insider Threat
  cis20:
  - CIS 10
  kill_chain_phases:
  - Command And Control
  mitre_attack_id:
  - T1105
  nist:
  - DE.CM
  required_fields:
  - process_user_name
  - device_hostname
  - process_file_name
  - process_cmd_line
  risk_score: 80
  security_domain: endpoint
  risk_severity: high
  research_site_url: https://research.splunk.com/endpoint/cc8d046a-543b-11ec-b864-acde48001122/
  mappings:
  - ocsf: process_user_name
    cim: user
  - ocsf: device_hostname
    cim: dest
  - ocsf: process_file_name
    cim: process_name
  - ocsf: process_cmd_line
    cim: cmd_line
test:
  name: Windows Curl Upload to Remote Destination Unit Test
  tests:
  - name: Windows Curl Upload to Remote Destination
    attack_data:
    - file_name: windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1105/atomic_red_team/windows-security.log
      source: WinEventLog:Security
eventSchema: ocsf
