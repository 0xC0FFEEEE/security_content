name: Windows OS Credential Dumping with Ntdsutil Export NTDS
id: dad9ddec-a72a-47be-87b6-a0f7ba98ed6e
version: 1
description: 'Monitor for signs that Ntdsutil is being used to Extract Active Directory
  database - NTDS.dit, typically used for offline password cracking. It may be used
  in normal circumstances with no command line arguments or shorthand variations of
  more common arguments. Ntdsutil.exe is typically seen run on a Windows Server. Typical
  command used to dump ntds.dit \

  ntdsutil "ac i ntds" "ifm" "create full C:\Temp" q q \

  This technique uses "Install from Media" (IFM), which will extract a copy of the
  Active Directory database. A successful export of the Active Directory database
  will yield a file modification named ntds.dit to the destination.'
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_file=ucast(map_get(process,"file"),
  "map<string, any>", null) | eval process_file_name=ucast(map_get(process_file,"name"),
  "string", null) | eval actor=ucast(map_get(input_event,"actor"), "map<string, any>",
  null) | eval actor_process=ucast(map_get(actor,"process"), "map<string, any>", null)
  | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string, any>",
  null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"), "string",
  null) | eval actor_process_cmd_line=ucast(map_get(actor_process,"cmd_line"), "string",
  null) | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null)
  | eval process_file_path=ucast(map_get(process_file,"path"), "string", null) | eval
  process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval process_user_name=ucast(map_get(process_user,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where process_file_name="ntdsutil.exe" AND (like(process_cmd_line, "%create%")
  AND like(process_cmd_line, "%ntds%")) 
  | eval body=create_map(
    "activity_id", 1,
    "analytic_stories", ["Credential Dumping", "HAFNIUM Group", "Living Off The Land"],
    "cis_csc", [create_map("control", "CIS 10", "version", 7)],
    "category_uid", 2,
    "class_name", "Detection Report",
    "class_uid", 102001,
    "confidence", 50,
    "confidence_id", 2,
    "devices", [
        create_map(
            "hostname", device_hostname, "type_id", 0, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ],
    "duration", 0,
    "time", timestamp,
    "evidence", create_map("process.user.name", process_user_name, "device.hostname", device_hostname, "process.file.name", process_file_name, "process.cmd_line", process_cmd_line),
    "impact", 100,
    "impact_id", 5,
    "kill_chain", [create_map("phase", "Exploitation", "phase_id", 4)],
    "attacks", [create_map("tactics", [create_map("name", "Credential Access", "uid", "TA0006")], "technique", create_map("name", "NTDS", "uid", "T1003.003"), "version", "12.1"), create_map("tactics", [create_map("name", "Credential Access", "uid", "TA0006")], "technique", create_map("name", "OS Credential Dumping", "uid", "T1003"), "version", "12.1")],  
    "message", concat("Windows OS Credential Dumping with Ntdsutil Export NTDS has been triggered on ", device_hostname, " by ", process_user_name, "."),
    "metadata", create_map(
        "product", create_map(
            "name", "Behavioral Analytic Service",
            "vendor_name", "Splunk"
        ),
        "version", "1.0.0"
    ),
    "nist", ["DE.CM"],
    "observables", [create_map("name", "process.user.name", "type_id", 4, "value", process_user_name), create_map("name", "device.hostname", "type_id", 1, "value", device_hostname), create_map("name", "process.file.name", "type_id", 7, "value", process_file_name), create_map("name", "process.cmd_line", "type_id", 99, "value", process_cmd_line)],
    "risk_level", "Medium",
    "risk_level_id", 2,
    "risk_score", 50,
    "severity_id", 5,
    "type_uid", 10200101,
    "users", [
        create_map(
            "name", process_user_name, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ]
  )
  | into write_ba_finding_events();'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: Highly possible Server Administrators will troubleshoot with
  ntdsutil.exe, generating false positives.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.003/T1003.003.md#atomic-test-3---dump-active-directory-database-with-ntdsutil
- https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc753343(v=ws.11)
- https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf
- https://strontic.github.io/xcyclopedia/library/vss_ps.dll-97B15BDAE9777F454C9A6BA25E938DB3.html
tags:
  analytic_story:
  - Credential Dumping
  - HAFNIUM Group
  - Living Off The Land
  cis20:
  - CIS 10
  kill_chain_phases:
  - Exploitation
  mitre_attack_id:
  - T1003.003
  - T1003
  nist:
  - DE.CM
  required_fields:
  - process.user.name
  - device.hostname
  - process.file.name
  - process.cmd_line
  risk_score: 50
  security_domain: endpoint
  risk_severity: medium
  research_site_url: https://research.splunk.com/endpoint/dad9ddec-a72a-47be-87b6-a0f7ba98ed6e/
  mappings:
  - ocsf: process.user.name
    cim: user
  - ocsf: device.hostname
    cim: dest
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: cmd_line
test:
  name: Windows OS Credential Dumping with Ntdsutil Export NTDS Unit Test
  tests:
  - name: Windows OS Credential Dumping with Ntdsutil Export NTDS
    attack_data:
    - file_name: 4688_windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.003/atomic_red_team/4688_windows-security.log
      source: XmlWinEventLog
