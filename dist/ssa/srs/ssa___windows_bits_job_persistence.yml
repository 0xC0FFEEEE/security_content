name: Windows Bits Job Persistence
id: 1e25e97a-8ea4-11ec-9767-acde48001122
version: 1
description: The following query identifies Microsoft Background Intelligent Transfer
  Service utility `bitsadmin.exe` scheduling a BITS job to persist on an endpoint.
  The query identifies the parameters used to create, resume or add a file to a BITS
  job. Typically seen combined in a oneliner or ran in sequence. If identified, review
  the BITS job created and capture any files written to disk. It is possible for BITS
  to be used to upload files and this may require further network data analysis to
  identify. You can use `bitsadmin /list /verbose` to list out the jobs during investigation.
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_pid=ucast(map_get(process,"pid"),
  "string", null) | eval process_file=ucast(map_get(process,"file"), "map<string,
  any>", null) | eval process_file_path=ucast(map_get(process_file,"path"), "string",
  null) | eval process_file_name=ucast(map_get(process_file,"name"), "string", null)
  | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null) | eval
  process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval process_user_name=ucast(map_get(process_user,"name"),
  "string", null) | eval actor=ucast(map_get(input_event,"actor"), "map<string, any>",
  null) | eval actor_process=ucast(map_get(actor,"process"), "map<string, any>", null)
  | eval actor_process_pid=ucast(map_get(actor_process,"pid"), "string", null) | eval
  actor_process_file=ucast(map_get(actor_process,"file"), "map<string, any>", null)
  | eval actor_process_file_path=ucast(map_get(actor_process_file,"path"), "string",
  null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"), "string",
  null) | eval device=ucast(map_get(input_event,"device"), "map<string, any>", null)
  | eval device_hostname=ucast(map_get(device,"hostname"), "string", null) | where
  (like(process_cmd_line, "%resume%") OR like(process_cmd_line, "%setcustomheaders%")
  OR like(process_cmd_line, "%setminretrydelay%") OR like(process_cmd_line, "%setnotifycmdline%")
  OR like(process_cmd_line, "%setnotifyflags%") OR like(process_cmd_line, "%addfile%")
  OR like(process_cmd_line, "%create%")) AND process_file_name="bitsadmin.exe" 
  | eval body=create_map(
    "activity_id", 1,
    "analytic_stories", ["BITS Jobs", "Living Off The Land"],
    "cis_csc", [create_map("control", "CIS 10", "version", 7)],
    "category_uid", 2,
    "class_name", "Detection Report",
    "class_uid", 102001,
    "confidence", 80,
    "confidence_id", 3,
    "devices", [
        create_map(
            "hostname", device_hostname, "type_id", 0, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ],
    "duration", 0,
    "time", timestamp,
    "evidence", create_map("process.user.name", process_user_name, "device.hostname", device_hostname, "process.file.name", process_file_name, "process.cmd_line", process_cmd_line),
    "impact", 70,
    "impact_id", 4,
    "kill_chain", [create_map("phase", "Exploitation", "phase_id", 4), create_map("phase", "Installation", "phase_id", 5)],
    "attacks", [create_map("tactics", [create_map("name", "Defense Evasion", "uid", "TA0005"), create_map("name", "Persistence", "uid", "TA0003")], "technique", create_map("name", "BITS Jobs", "uid", "T1197"), "version", "12.1")],  
    "message", concat("Windows Bits Job Persistence has been triggered on ", device_hostname, " by ", process_user_name, "."),
    "metadata", create_map(
        "product", create_map(
            "name", "Behavioral Analytic Service",
            "vendor_name", "Splunk"
        ),
        "version", "1.0.0"
    ),
    "nist", ["DE.CM"],
    "observables", [create_map("name", "process.user.name", "type_id", 4, "value", process_user_name), create_map("name", "device.hostname", "type_id", 1, "value", device_hostname), create_map("name", "process.file.name", "type_id", 7, "value", process_file_name), create_map("name", "process.cmd_line", "type_id", 99, "value", process_cmd_line)],
    "risk_level", "Medium",
    "risk_level_id", 2,
    "risk_score", 56,
    "severity_id", 4,
    "type_uid", 10200101,
    "users", [
        create_map(
            "name", process_user_name, "uuid", ucast(map_get(device,"uuid"), "string", null)
        )
    ]
  )
  | into write_ba_finding_events();'
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint` datamodel in the `Processes` node. In addition,
  confirm the latest CIM App 4.20 or higher is installed and the latest TA for the
  endpoint product.
known_false_positives: Limited false positives will be present. Typically, applications
  will use `BitsAdmin.exe`. Any filtering should be done based on command-line arguments
  (legitimate applications) or parent process.
references:
- https://attack.mitre.org/techniques/T1197/
- https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/bitsadmin
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1197/T1197.md#atomic-test-3---persist-download--execute
- https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/
tags:
  analytic_story:
  - BITS Jobs
  - Living Off The Land
  cis20:
  - CIS 10
  kill_chain_phases:
  - Exploitation
  - Installation
  mitre_attack_id:
  - T1197
  nist:
  - DE.CM
  required_fields:
  - process.user.name
  - device.hostname
  - process.file.name
  - process.cmd_line
  risk_score: 56
  security_domain: endpoint
  risk_severity: medium
  research_site_url: https://research.splunk.com/endpoint/1e25e97a-8ea4-11ec-9767-acde48001122/
  event_schema: ocsf
  mappings:
  - ocsf: process.pid
    cim: process_id
  - ocsf: process.file.path
    cim: process_path
  - ocsf: process.file.name
    cim: process_name
  - ocsf: process.cmd_line
    cim: process
  - ocsf: process.user.name
    cim: user
  - ocsf: actor.process.pid
    cim: parent_process_id
  - ocsf: actor.process.file.path
    cim: parent_process_path
  - ocsf: actor.process.file.name
    cim: parent_process_name
  - ocsf: device.hostname
    cim: dest
test:
  name: Windows Bits Job Persistence Unit Test
  tests:
  - name: Windows Bits Job Persistence
    attack_data:
    - file_name: bits-windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1197/atomic_red_team/bits-windows-security.log
      source: WinEventLog:Security
