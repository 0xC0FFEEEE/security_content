name: Windows OS Credential Dumping with Procdump
id: e102e297-dbe6-4a19-b319-5c08f4c19a06
version: 1
date: '2022-08-31'
author: Michael Haag, Splunk
type: TTP
status: production
description: 'Detect procdump.exe dumping the lsass process. This query looks for
  both -mm and -ma usage. -mm will produce a mini dump file and -ma will write a dump
  file with all process memory. Both are highly suspect and should be reviewed. This
  query does not monitor for the internal name (original_file_name=procdump) of the
  PE or look for procdump64.exe. Modify the query as needed.\

  During triage, confirm this is procdump.exe executing. If it is the first time a
  Sysinternals utility has been ran, it is possible there will be a -accepteula on
  the command line. Review other endpoint data sources for cross process (injection)
  into lsass.exe.'
data_source:
- Windows Security 4688
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_file=ucast(map_get(process,"file"),
  "map<string, any>", null) | eval process_file_name=ucast(map_get(process_file,"name"),
  "string", null) | eval actor=ucast(map_get(input_event,"actor"), "map<string, any>",
  null) | eval actor_process=ucast(map_get(actor,"process"), "map<string, any>", null)
  | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string, any>",
  null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"), "string",
  null) | eval actor_process_cmd_line=ucast(map_get(actor_process,"cmd_line"), "string",
  null) | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null)
  | eval process_file_path=ucast(map_get(process_file,"path"), "string", null) | eval
  process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval process_user_name=ucast(map_get(process_user,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where ((like(process_cmd_line, "%-ma %") OR like(process_cmd_line, "%-mm
  %")) AND (process_file_name="procdump64.exe" OR process_file_name="procdump.exe"))
  AND like(process_cmd_line, "%lsass%") --finding_report--'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: None identified.
references:
- https://attack.mitre.org/techniques/T1003/001/
- https://docs.microsoft.com/en-us/sysinternals/downloads/procdump
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.001/T1003.001.md#atomic-test-2---dump-lsassexe-memory-using-procdump
- https://thedfirreport.com/2022/08/08/bumblebee-roasts-its-way-to-domain-admin/
tags:
  analytic_story:
  - Credential Dumping
  - HAFNIUM Group
  asset_type: Endpoint
  confidence: 100
  impact: 80
  message: Procdump was utilized to dump lsass on $dest_device_id$ by $dest_user_id$.
  mitre_attack_id:
  - T1003.001
  - T1003
  observable:
  - name: process_user_name
    type: User Name
  - name: device_hostname
    type: Hostname
  - name: process_file_name
    type: File Name
  - name: process_cmd_line
    type: Other
  product:
  - Splunk Behavioral Analytics
  required_fields:
  - process_user_name
  - device_hostname
  - process_file_name
  - process_cmd_line
  risk_score: 80
  security_domain: endpoint
  mappings:
  - ocsf: process_user_name
    cim: user
  - ocsf: device_hostname
    cim: dest
  - ocsf: process_file_name
    cim: process_name
  - ocsf: process_cmd_line
    cim: cmd_line
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.001/atomic_red_team/procdump_windows-security.log
    source: XmlWinEventLog
    sourcetype: XmlWinEventLog
