name: Windows CertUtil Decode File
id: b06983f4-8f72-11ec-ab50-acde48001122
version: 1
date: '2022-02-16'
author: Michael Haag, Splunk
type: TTP
status: production
description: CertUtil.exe may be used to `encode` and `decode` a file, including PE
  and script code. Encoding will convert a file to base64 with `-----BEGIN CERTIFICATE-----`
  and `-----END CERTIFICATE-----` tags. Malicious usage will include decoding a encoded
  file that was downloaded. Once decoded, it will be loaded by a parallel process.
  Note that there are two additional command switches that may be used - `encodehex`
  and `decodehex`. Similarly, the file will be encoded in HEX and later decoded for
  further execution. During triage, identify the source of the file being decoded.
  Review its contents or execution behavior for further analysis.
data_source:
- Windows Security 4688
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_file=ucast(map_get(process,"file"),
  "map<string, any>", null) | eval process_file_name=ucast(map_get(process_file,"name"),
  "string", null) | eval actor=ucast(map_get(input_event,"actor"), "map<string, any>",
  null) | eval actor_process=ucast(map_get(actor,"process"), "map<string, any>", null)
  | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string, any>",
  null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"), "string",
  null) | eval actor_process_cmd_line=ucast(map_get(actor_process,"cmd_line"), "string",
  null) | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null)
  | eval process_file_path=ucast(map_get(process_file,"path"), "string", null) | eval
  process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval process_user_name=ucast(map_get(process_user,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where like(process_cmd_line, "%decode%") AND process_file_name="certutil.exe"
  --finding_report--'
how_to_implement: To successfully implement this search you need to be ingesting information
  on process that include the name of the process responsible for the changes from
  your endpoints into the `Endpoint` datamodel in the `Processes` node. In addition,
  confirm the latest CIM App 4.20 or higher is installed and the latest TA for the
  endpoint product.
known_false_positives: Typically seen used to `encode` files, but it is possible to
  see legitimate use of `decode`. Filter based on parent-child relationship, file
  paths, endpoint or user.
references:
- https://attack.mitre.org/techniques/T1140/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1140/T1140.md
- https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil
- https://www.bleepingcomputer.com/news/security/certutilexe-could-allow-attackers-to-download-malware-while-bypassing-av/
tags:
  analytic_story:
  - Deobfuscate-Decode Files or Information
  - Living Off The Land
  asset_type: Endpoint
  confidence: 80
  impact: 50
  message: An instance of $parent_process_name$ spawning $process_name$ was identified
    on endpoint $dest_device_id$ by user $dest_user_id$ attempting to decode a file
    on disk.
  mitre_attack_id:
  - T1140
  observable:
  - name: process_user_name
    type: User Name
  - name: device_hostname
    type: Hostname
  - name: process_file_name
    type: File Name
  - name: process_cmd_line
    type: Other
  product:
  - Splunk Behavioral Analytics
  required_fields:
  - process_user_name
  - device_hostname
  - process_file_name
  - process_cmd_line
  risk_score: 40
  security_domain: endpoint
  mappings:
  - ocsf: process_user_name
    cim: user
  - ocsf: device_hostname
    cim: dest
  - ocsf: process_file_name
    cim: process_name
  - ocsf: process_cmd_line
    cim: cmd_line
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1140/atomic_red_team/encode-windows-security.log
    source: WinEventLog:Security
