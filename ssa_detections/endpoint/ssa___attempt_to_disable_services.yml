name: Attempt To Disable Services
id: afb31de4-d023-11eb-98d5-acde48001122
version: 3
date: '2021-11-24'
author: Teoderick Contreras, Splunk
type: TTP
status: production
description: The following analytic identifies Windows Service Control, `sc.exe`,
  attempting to disable a service. This is typically identified in parallel with other
  instances of service enumeration of attempts to stop a service and then disable
  it. Adversaries utilize this technique to terminate security services or other related
  services to continue there objective and evade detections.
data_source:
- Windows Security 4688
search: ' | from read_ba_enriched_events() | eval timestamp = ucast(map_get(input_event,"time"),"long",
  null) | eval metadata = ucast(map_get(input_event, "metadata"),"map<string, any>",
  null) | eval metadata_uid = ucast(map_get(metadata, "uid"),"string", null) | eval
  process=ucast(map_get(input_event,"process"), "map<string, any>", null) | eval process_file=ucast(map_get(process,"file"),
  "map<string, any>", null) | eval process_file_name=ucast(map_get(process_file,"name"),
  "string", null) | eval actor=ucast(map_get(input_event,"actor"), "map<string, any>",
  null) | eval actor_process=ucast(map_get(actor,"process"), "map<string, any>", null)
  | eval actor_process_file=ucast(map_get(actor_process,"file"), "map<string, any>",
  null) | eval actor_process_file_name=ucast(map_get(actor_process_file,"name"), "string",
  null) | eval actor_process_cmd_line=ucast(map_get(actor_process,"cmd_line"), "string",
  null) | eval process_cmd_line=ucast(map_get(process,"cmd_line"), "string", null)
  | eval process_file_path=ucast(map_get(process_file,"path"), "string", null) | eval
  process_user=ucast(map_get(process,"user"), "map<string, any>", null) | eval process_user_name=ucast(map_get(process_user,"name"),
  "string", null) | eval device=ucast(map_get(input_event,"device"), "map<string,
  any>", null) | eval device_hostname=ucast(map_get(device,"hostname"), "string",
  null) | where like(process_cmd_line, "%config%") AND like(process_cmd_line, "%disabled%")
  AND process_file_name="sc.exe" --finding_report--'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: It is possible administrative scripts may start/stop/delete
  services. Filter as needed.
references:
- https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/
- https://app.any.run/tasks/c0f98850-af65-4352-9746-fbebadee4f05/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1562.001/T1562.001.md#atomic-test-14---disable-arbitrary-security-windows-service
tags:
  analytic_story:
  - XMRig
  - Ransomware
  asset_type: Endpoint
  confidence: 60
  impact: 60
  message: An instance of $parent_process_name$ spawning $process_name$ was identified
    on endpoint $dest_device_id$ by user $dest_user_id$ attempting to disable a service.
  mitre_attack_id:
  - T1489
  observable:
  - name: process_user_name
    type: User Name
  - name: device_hostname
    type: Hostname
  - name: process_file_name
    type: File Name
  - name: process_cmd_line
    type: Other
  product:
  - Splunk Behavioral Analytics
  required_fields:
  - process_user_name
  - device_hostname
  - process_file_name
  - process_cmd_line
  risk_score: 36
  security_domain: endpoint
  mappings:
  - ocsf: process_user_name
    cim: user
  - ocsf: device_hostname
    cim: dest
  - ocsf: process_file_name
    cim: process_name
  - ocsf: process_cmd_line
    cim: cmd_line
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/ransomware_ttp/ssa_data1/sc_disable.log
    source: WinEventLog:Security
